name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  Vue-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Push Vue Image
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}/GameMutualFrontend/
          push: true
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

  ASP-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Push ASP.NET Image
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}/GameMutualAPI/GameMutual.sln
          push: true
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

  ASP-Unit-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v7
        with:
          dotnet-version: '7.0'

      - name: Run ASP.NET Unit Tests
        run: |
          dotnet restore ./GameMutualAPI/GameMutual.sln
          dotnet build ./GameMutualAPI/GameMutual.sln
          dotnet test ./GameMutualAPI/GameMutual.sln

  sonarqube-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Run SonarQube Check
        run: |
          dotnet sonarscanner begin /k:"I510637_game-mutual_AYvtZnUrZlX88Bmommvq" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:"sonar.host.url=${{ secrets.SONAR_HOST_URL }}"
          dotnet build ./GameMutualAPI/GameMutual.sln
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  sonarqube-vulnerability-report:
    runs-on: ubuntu-latest
    needs: sonarqube-check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download SonarQube SAST Report
        run: 'curl -u "${{ secrets.SONAR_TOKEN }}:" "${{ secrets.SONAR_HOST_URL }}/api/issues/gitlab_sast_export?projectKey=I510637_game-mutual_AYvtZnUrZlX88Bmommvq&branch=${{ github.ref }}&pullRequest=${{ github.event_number }}" -o gl-sast-sonar-report.json'
        shell: bash

      - name: Upload SAST Report as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: gl-sast-sonar-report
          path: gl-sast-sonar-report.json

  build_image:
    runs-on: ubuntu-latest
    needs: [Vue-Build, ASP-Build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
        env:
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASS: ${{ secrets.REGISTRY_PASS }}
          IMAGE_NAME: erieq/game-mutual
          IMAGE_TAG: csharp-app-1.0
