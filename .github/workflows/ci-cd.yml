name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
      - develop
      - Pipeline-configuration
  pull_request:

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  IMAGE_NAME: erieq/game-mutual
  IMAGE_TAG: csharp-app-1.0
  BACKEND_DIRECTORY: ./GameMutualAPI/GameMutual.sln
  FRONTEND_DIRECTORY: ./GameMutualFrontend/

jobs:
  Vue-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin

      - name: Build and Push Vue Docker Image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/game-mutual:vue-${GITHUB_SHA::8} $FRONTEND_DIRECTORY
          docker push $DOCKER_HUB_USERNAME/game-mutual:vue-${GITHUB_SHA::8}

  ASP-Build:
    needs: Vue-Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin

      - name: Build and Push API Docker Image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/game-mutual:api-${GITHUB_SHA::8} $BACKEND_DIRECTORY
          docker push $DOCKER_HUB_USERNAME/game-mutual:api-${GITHUB_SHA::8}

  ASP-Unit-Test:
    needs: ASP-Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0'

      - name: Run ASP.NET Unit Tests
        run: |
          dotnet restore $BACKEND_DIRECTORY
          dotnet build $BACKEND_DIRECTORY
          dotnet test $BACKEND_DIRECTORY