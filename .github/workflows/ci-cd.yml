name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
      - develop
      - Pipeline-configuration
  pull_request:

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  IMAGE_NAME: erieq/game-mutual
  IMAGE_TAG: csharp-app-1.0
  BACKEND_DIRECTORY: ./GameMutualAPI/
  FRONTEND_DIRECTORY: ./GameMutualFrontend/

jobs:
  Vue-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin

      - name: Build and Push Vue Docker Image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/game-mutual:vue-${GITHUB_SHA::8} $FRONTEND_DIRECTORY
          docker push $DOCKER_HUB_USERNAME/game-mutual:vue-${GITHUB_SHA::8}

  ASP-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin

      - name: Build and Push API Docker Image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/game-mutual:api-${GITHUB_SHA::8} $BACKEND_DIRECTORY
          docker push $DOCKER_HUB_USERNAME/game-mutual:api-${GITHUB_SHA::8}

  ASP-Unit-Test:
    needs: ASP-Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0'

      - name: Run ASP.NET Unit Tests
        run: |
          dotnet restore $BACKEND_DIRECTORY
          dotnet build $BACKEND_DIRECTORY
          dotnet test $BACKEND_DIRECTORY

  SonarQube-Backend:
    needs: ASP-Unit-Test
    name: SonarCloud-Backend
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"ErikH-Dev_Game-Mutual-Github" /o:"erikh-dev" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.sources="GameMutualAPI/"
          dotnet test $BACKEND_DIRECTORY --collect:"XPlat Code Coverage"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  SonarQube-Frontend:
    needs: Vue-Build
    name: SonarCloud-Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ env.FRONTEND_DIRECTORY }}
          args: >
            -Dsonar.projectKey=ErikH-Dev_Game-Mutual-Github
            -Dsonar.organization=erikh-dev